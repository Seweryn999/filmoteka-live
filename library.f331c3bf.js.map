{"mappings":"iiBAOA,MAAMA,EAAaC,SAASC,cAAc,oBACpCC,EAAWF,SAASC,cAAc,kBAuGxCF,EAAWI,iBAAiB,SAnGD,KACvB,MAAMC,EAAYJ,SAASC,cAAc,qBAAqBI,QAAQC,MAG3C,EAACC,EAAMC,EAAQC,KACtC,IAAIC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQN,KAAY,GACvDO,EAAcJ,KAAKC,MAAMC,aAAaC,QAAQL,KAAe,GAE7DC,EAASM,SAAST,GAClBU,EAAAC,OAAOC,QAAQ,GAAGf,uBAA+BI,EAAOY,QAAQ,QAAS,IAAIC,wBAI7EN,EAAYC,SAAST,IACrBQ,EAAcA,EAAYO,QAAOC,GAAMA,IAAOhB,IAC9CM,aAAaW,QAAQf,EAAWE,KAAKc,UAAUV,IAC/CE,EAAAC,OAAOQ,QAAQ,GAAGtB,yBAAiCK,EAAUW,QAAQ,QAAS,IAAIC,kCAAkCb,EAAOY,QAAQ,QAAS,IAAIC,wBAEhJJ,EAAAC,OAAOQ,QAAQ,GAAGtB,qBAA6BI,EAAOY,QAAQ,QAAS,IAAIC,uBAG/EX,EAASiB,KAAKpB,GACdM,aAAaW,QAAQhB,EAAQG,KAAKc,UAAUf,IACjC,EAEfkB,CAvBe1B,EAASG,QAAQkB,GAuBL,eAAgB,aAAa,IA2E5DrB,EAASC,iBAAiB,SAlDG,KACrB,MAAMC,EAAYJ,SAASC,cAAc,qBAAqBI,QAAQC,MAG3C,EAACC,EAAMC,EAAQC,KACtC,IAAIC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQN,KAAY,GACvDO,EAAcJ,KAAKC,MAAMC,aAAaC,QAAQL,KAAe,GAE7DC,EAASM,SAAST,GAClBU,EAAAC,OAAOC,QAAQ,GAAGf,uBAA+BI,EAAOY,QAAQ,QAAS,IAAIC,wBAI7EN,EAAYC,SAAST,IACrBQ,EAAcA,EAAYO,QAAOC,GAAMA,IAAOhB,IAC9CM,aAAaW,QAAQf,EAAWE,KAAKc,UAAUV,IAC/CE,EAAAC,OAAOQ,QAAQ,GAAGtB,yBAAiCK,EAAUW,QAAQ,QAAS,IAAIC,kCAAkCb,EAAOY,QAAQ,QAAS,IAAIC,wBAEhJJ,EAAAC,OAAOQ,QAAQ,GAAGtB,qBAA6BI,EAAOY,QAAQ,QAAS,IAAIC,uBAG/EX,EAASiB,KAAKpB,GACdM,aAAaW,QAAQhB,EAAQG,KAAKc,UAAUf,IACjC,EAGfkB,CAxBe1B,EAASG,QAAQkB,GAwBL,aAAc,eAAe","sources":["src/scripts/library-watched-queue.mjs"],"sourcesContent":["import axios from \"axios\";\nimport { Notify } from \"notiflix\";\nimport { apiKey } from \"./make_single_tile.mjs\";\nimport { getFilmDetails } from \"./modal-library.mjs\";\nimport { makeSingleFilmTile } from \"./make_single_tile.mjs\";\nimport { renderQueue, renderWatched } from \"./library.mjs\";\n\nconst addWatched = document.querySelector(\".add-watched-btn\");\nconst addQueue = document.querySelector(\".add-queue-btn\");\n\n\n\nconst handleAddToWatched = () => {\n    const filmTitle = document.querySelector(\".modal-film-title\").dataset.title;\n    const filmId = addQueue.dataset.id;\n\n    const updateLocalStorage = (film, addKey, removeKey) => {\n        let addFilms = JSON.parse(localStorage.getItem(addKey)) || [];\n        let removeFilms = JSON.parse(localStorage.getItem(removeKey)) || [];\n    \n        if (addFilms.includes(film)) {\n            Notify.failure(`${filmTitle} is already in the ${addKey.replace('Films', '').toLowerCase()} list!`);\n            return false;\n        }\n    \n        if (removeFilms.includes(film)) {\n            removeFilms = removeFilms.filter(id => id !== film);\n            localStorage.setItem(removeKey, JSON.stringify(removeFilms));\n            Notify.success(`${filmTitle} is removed from the ${removeKey.replace('Films', '').toLowerCase()} and added to the ${addKey.replace('Films', '').toLowerCase()} list!`);\n        } else {\n            Notify.success(`${filmTitle} is added to the ${addKey.replace('Films', '').toLowerCase()} list!`);\n        }\n    \n        addFilms.push(film);\n        localStorage.setItem(addKey, JSON.stringify(addFilms));\n        return true;\n    };\n    updateLocalStorage(filmId, 'watchedFilms', 'queueFilms');\n\n\n    };\n\n    // const addToLocalStorage = (film, key) => {\n    //     let films = JSON.parse(localStorage.getItem(key)) || [];\n    //     let queueFilms = JSON.parse(localStorage.getItem('queueFilms')) || [];\n\n    //     if (films.includes(film)) {\n    //         Notify.failure(`${filmTitle} is already watched!`);\n    //         return false;\n    //     } \n    //     if (queueFilms.includes(film)) {\n    //         Notify.failure(`${filmTitle} is already in on the queue!`);\n    //         return false;\n    //     }\n    //     else {\n    //     Notify.success(`${filmTitle} is added to watched list!`);\n    //     films.push(film);\n    //     localStorage.setItem(key, JSON.stringify(films));\n    //     }\n    // };\n    // addToLocalStorage(filmId, 'watchedFilms')\n\n    const handleAddToQueue = () => {\n        const filmTitle = document.querySelector(\".modal-film-title\").dataset.title;\n        const filmId = addQueue.dataset.id;\n\n        const updateLocalStorage = (film, addKey, removeKey) => {\n            let addFilms = JSON.parse(localStorage.getItem(addKey)) || [];\n            let removeFilms = JSON.parse(localStorage.getItem(removeKey)) || [];\n        \n            if (addFilms.includes(film)) {\n                Notify.failure(`${filmTitle} is already in the ${addKey.replace('Films', '').toLowerCase()} list!`);\n                return false;\n            }\n        \n            if (removeFilms.includes(film)) {\n                removeFilms = removeFilms.filter(id => id !== film);\n                localStorage.setItem(removeKey, JSON.stringify(removeFilms));\n                Notify.success(`${filmTitle} is removed from the ${removeKey.replace('Films', '').toLowerCase()} and added to the ${addKey.replace('Films', '').toLowerCase()} list!`);\n            } else {\n                Notify.success(`${filmTitle} is added to the ${addKey.replace('Films', '').toLowerCase()} list!`);\n            }\n        \n            addFilms.push(film);\n            localStorage.setItem(addKey, JSON.stringify(addFilms));\n            return true;\n        };\n\n        updateLocalStorage(filmId, 'queueFilms', 'watchedFilms');\n\n\n        // const addToLocalStorage = (film, key) => {\n        //     let films = JSON.parse(localStorage.getItem(key)) || [];\n        //     let watchedFilms = JSON.parse(localStorage.getItem('watchedFilms')) || [];\n            \n        //     if (watchedFilms.includes(film)) {\n        //         Notify.failure(`${filmTitle} is already watched!`);\n        //         return false;\n        //     }\n        //     if (films.includes(film)) {\n        //         Notify.failure(`${filmTitle} is already in on the queue!`);\n        //         return false;\n        //     } else {\n        //     Notify.success(`${filmTitle} is added to queue list!`);\n        //     films.push(film);\n        //     localStorage.setItem(key, JSON.stringify(films));\n        //     }\n        // };\n        // addToLocalStorage(filmId, 'queueFilms');\n    };\n\naddWatched.addEventListener(\"click\", handleAddToWatched);\naddQueue.addEventListener(\"click\", handleAddToQueue);\n"],"names":["$cead6d4dc236fae2$var$addWatched","document","querySelector","$cead6d4dc236fae2$var$addQueue","addEventListener","filmTitle","dataset","title","film","addKey","removeKey","addFilms","JSON","parse","localStorage","getItem","removeFilms","includes","$1GAPJ","Notify","failure","replace","toLowerCase","filter","id","setItem","stringify","success","push","updateLocalStorage"],"version":3,"file":"library.f331c3bf.js.map"}