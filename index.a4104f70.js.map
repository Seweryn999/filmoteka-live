{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,0BAIAC,SAASC,iBAAiB,oBAAoB,KAC5C,MAAMC,EAAiBF,SAASG,eAAe,mBACzCC,EAAaJ,SAASG,eAAe,cACrCE,EAAaL,SAASM,cAAc,oBACpCC,EAAQP,SAASG,eAAe,gBAEtC,KAAKD,GAAmBE,GAAeC,GAAeE,GAEpD,YADAC,QAAQC,MAAM,kCAKhB,IAAIC,EAAc,EAElBC,eAAeC,EAAaC,GAC1B,GAAoB,KAAhBN,EAAMO,MACR,IACE,MAAMC,QAAiB,EAAAjB,EAAAkB,kBAAiBH,GAClCI,EAAQF,EAASG,QACvBhB,EAAeiB,UAAY,GAE3B,IAAK,MAAMC,KAAQH,EAAO,CACxB,MAAMI,QAAqB,EAAAC,EAAAC,oBAAmBH,GAC9ClB,EAAesB,mBAAmB,YAAaH,E,CAIjDI,EADmBV,EAASW,Y,CAE5B,MAAOjB,GACPD,QAAQC,MAAM,2CAAgDA,E,MAGhE,IACE,MAAMM,QAAiB,EAAAY,EAAAC,uBAAsBrB,EAAMO,MAAOD,GACpDI,EAAQF,EAASG,QACvBhB,EAAeiB,UAAY,GAE3B,IAAK,MAAMC,KAAQH,EAAO,CACxB,MAAMI,QAAqB,EAAAC,EAAAC,oBAAmBH,GAC9ClB,EAAesB,mBAAmB,YAAaH,E,CAIjDI,EADmBV,EAASW,Y,CAE5B,MAAOG,GACPrB,QAAQC,MAAM,2CAA4CoB,E,EAKhE,SAASJ,EAAiBK,GACxB1B,EAAWe,UAAY,GAIvB,IAAIY,EAAYrB,EAFE,EAGdsB,EAAUtB,EAHI,EAKlBqB,EAAYE,KAAKC,IAAIH,EAAW,GAChCC,EAAUC,KAAKE,IAAIH,EAASF,GAE5B,MAAMM,EAAmBpC,SAASqC,cAAc,MAChDD,EAAiBE,UAAUC,IAAI,aACX,IAAhB7B,GACF0B,EAAiBE,UAAUC,IAAI,YAEjC,MAAMC,EAAmBxC,SAASqC,cAAc,KAChDG,EAAiBF,UAAUC,IAAI,aAC/BC,EAAiBC,KAAO,IACxBD,EAAiBE,YAAc,IAC/BF,EAAiBvC,iBAAiB,SAAU0C,IAC1CA,EAAMC,iBACFlC,EAAc,IAChBA,IACAE,EAAaF,G,IAGjB0B,EAAiBS,YAAYL,GAC7BpC,EAAWyC,YAAYT,GAEvB,IAAK,IAAIU,EAAIf,EAAWe,GAAKd,EAASc,IAAK,CACzC,MAAMC,EAAW/C,SAASqC,cAAc,MACxCU,EAAST,UAAUC,IAAI,aACnBO,IAAMpC,GACRqC,EAAST,UAAUC,IAAI,UAGzB,MAAMS,EAAWhD,SAASqC,cAAc,KACxCW,EAASV,UAAUC,IAAI,aACvBS,EAASP,KAAO,IAChBO,EAASN,YAAcI,EACvBE,EAAS/C,iBAAiB,SAAU0C,IAClCA,EAAMC,iBACNlC,EAAcoC,EACdlC,EAAaF,EAAY,IAG3BqC,EAASF,YAAYG,GACrB5C,EAAWyC,YAAYE,E,CAGzB,MAAME,EAAejD,SAASqC,cAAc,MAC5CY,EAAaX,UAAUC,IAAI,aACvB7B,IAAgBoB,GAClBmB,EAAaX,UAAUC,IAAI,YAE7B,MAAMW,EAAelD,SAASqC,cAAc,KAC5Ca,EAAaZ,UAAUC,IAAI,aAC3BW,EAAaT,KAAO,IACpBS,EAAaR,YAAc,IAC3BQ,EAAajD,iBAAiB,SAAU0C,IACtCA,EAAMC,iBACFlC,EAAcoB,IAChBpB,IACAE,EAAaF,G,IAGjBuC,EAAaJ,YAAYK,GACzB9C,EAAWyC,YAAYI,E,CAGzB5C,EAAWJ,iBAAiB,UAAWkD,IACrCA,EAAGP,iBACHlC,EAAc,EACdE,EAAaF,EAAY,IAG3BE,EAAaF,EAAY","sources":["src/scripts/pagination.mjs"],"sourcesContent":["import { getTrendingFilms } from './get-trending';\nimport { getFilmsByQueryString } from './get-films-by-query.mjs';\nimport { makeSingleFilmTile } from './make_single_tile';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const filmsContainer = document.getElementById('films-container');\n  const pagination = document.getElementById('pagination');\n  const searchForm = document.querySelector('form.search-form');\n  const input = document.getElementById('search-input');\n\n  if (!filmsContainer || !pagination || !searchForm || !input) {\n    console.error('Cannot find essential elements');\n    return;\n  }\n\n  const pageSize = 20;\n  let currentPage = 1;\n\n  async function displayFilms(page) {\n    if (input.value === '') {\n      try {\n        const response = await getTrendingFilms(page);\n        const films = response.results;\n        filmsContainer.innerHTML = '';\n\n        for (const film of films) {\n          const filmTileHTML = await makeSingleFilmTile(film);\n          filmsContainer.insertAdjacentHTML('beforeend', filmTileHTML);\n        }\n\n        const totalPages = response.total_pages;\n        createPagination(totalPages);\n      } catch (error) {\n        console.error('Wystąpił błąd podczas pobierania danych:', error);\n      }\n    } else {\n      try {\n        const response = await getFilmsByQueryString(input.value, page);\n        const films = response.results;\n        filmsContainer.innerHTML = '';\n\n        for (const film of films) {\n          const filmTileHTML = await makeSingleFilmTile(film);\n          filmsContainer.insertAdjacentHTML('beforeend', filmTileHTML);\n        }\n\n        const totalPages = response.total_pages;\n        createPagination(totalPages);\n      } catch (error) {\n        console.error('Wystąpił błąd podczas pobierania danych:', error);\n      }\n    }\n  }\n\n  function createPagination(totalPages) {\n    pagination.innerHTML = '';\n\n    const pageRange = 2;\n\n    let startPage = currentPage - pageRange;\n    let endPage = currentPage + pageRange;\n\n    startPage = Math.max(startPage, 1);\n    endPage = Math.min(endPage, totalPages);\n\n    const previousPageItem = document.createElement('li');\n    previousPageItem.classList.add('page-item');\n    if (currentPage === 1) {\n      previousPageItem.classList.add('disabled');\n    }\n    const previousPageLink = document.createElement('a');\n    previousPageLink.classList.add('page-link');\n    previousPageLink.href = '#';\n    previousPageLink.textContent = '<';\n    previousPageLink.addEventListener('click', (event) => {\n      event.preventDefault();\n      if (currentPage > 1) {\n        currentPage--;\n        displayFilms(currentPage);\n      }\n    });\n    previousPageItem.appendChild(previousPageLink);\n    pagination.appendChild(previousPageItem);\n\n    for (let i = startPage; i <= endPage; i++) {\n      const pageItem = document.createElement('li');\n      pageItem.classList.add('page-item');\n      if (i === currentPage) {\n        pageItem.classList.add('active');\n      }\n\n      const pageLink = document.createElement('a');\n      pageLink.classList.add('page-link');\n      pageLink.href = '#';\n      pageLink.textContent = i;\n      pageLink.addEventListener('click', (event) => {\n        event.preventDefault();\n        currentPage = i;\n        displayFilms(currentPage);\n      });\n\n      pageItem.appendChild(pageLink);\n      pagination.appendChild(pageItem);\n    }\n\n    const nextPageItem = document.createElement('li');\n    nextPageItem.classList.add('page-item');\n    if (currentPage === totalPages) {\n      nextPageItem.classList.add('disabled');\n    }\n    const nextPageLink = document.createElement('a');\n    nextPageLink.classList.add('page-link');\n    nextPageLink.href = '#';\n    nextPageLink.textContent = '>';\n    nextPageLink.addEventListener('click', (event) => {\n      event.preventDefault();\n      if (currentPage < totalPages) {\n        currentPage++;\n        displayFilms(currentPage);\n      }\n    });\n    nextPageItem.appendChild(nextPageLink);\n    pagination.appendChild(nextPageItem);\n  }\n\n  searchForm.addEventListener('submit', (ev) => {\n    ev.preventDefault();\n    currentPage = 1;\n    displayFilms(currentPage);\n  });\n\n  displayFilms(currentPage);\n});\n"],"names":["$2mSBZ","parcelRequire","document","addEventListener","filmsContainer","getElementById","pagination","searchForm","querySelector","input","console","error","currentPage","async","displayFilms","page","value","response","getTrendingFilms","films","results","innerHTML","film","filmTileHTML","$4v6BD","makeSingleFilmTile","insertAdjacentHTML","createPagination","total_pages","$7nIDF","getFilmsByQueryString","error1","totalPages","startPage","endPage","Math","max","min","previousPageItem","createElement","classList","add","previousPageLink","href","textContent","event","preventDefault","appendChild","i","pageItem","pageLink","nextPageItem","nextPageLink","ev"],"version":3,"file":"index.a4104f70.js.map"}