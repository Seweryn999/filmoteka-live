{"mappings":"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","sources":["src/scripts/library.mjs"],"sourcesContent":["import axios from \"axios\";\nimport { Notify } from \"notiflix\";\nimport { apiKey } from \"./make_single_tile.mjs\";\nimport { makeSingleFilmTile } from \"./make_single_tile.mjs\";\n\nconst watchedBtn = document.querySelector(\".watched-btn\");\nconst queueBtn = document.querySelector(\".queue-btn\");\n\nasync function getFilmDetails(filmId) {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${filmId}?api_key=${apiKey}`\n      );\n      return response.data;\n    } catch (error) {\n      Notify.failure('Wystąpił błąd podczas pobierania szczegółów filmu.');\n      console.error('Błąd podczas pobierania szczegółów filmu:', error);\n      return null;\n    }\n  }\n\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n    const watchArr = JSON.parse(localStorage.getItem('watchedFilms'));\n    const gallery = document.querySelector(\".movies-gallery\");\n    gallery.innerHTML = \"\";\n    watchedBtn.classList.add(\"active-btn\");\n    for (const element of watchArr) {\n          const filmDetails = await getFilmDetails(element);\n          if (filmDetails) {\n              const filmTile = await makeSingleFilmTile(filmDetails);\n              gallery.innerHTML += filmTile;\n          }\n      }\n\n    if (!gallery) {\n        console.error(\"Target container not found.\");\n        return;\n    }\n    watchedBtn.addEventListener(\"click\", async () => {\n      const watchArr = JSON.parse(localStorage.getItem('watchedFilms'));\n      gallery.innerHTML = \"\";\n      queueBtn.classList.remove(\"active-btn\");\n      watchedBtn.classList.add(\"active-btn\");\n      for (const element of watchArr) {\n          const filmDetails = await getFilmDetails(element);\n          if (filmDetails) {\n              const filmTile = await makeSingleFilmTile(filmDetails);\n              gallery.innerHTML += filmTile;\n          }\n      }\n  });\n  queueBtn.addEventListener(\"click\", async () => {\n    const queueArr = JSON.parse(localStorage.getItem('queueFilms'));\n    gallery.innerHTML = \"\";\n    watchedBtn.classList.remove(\"active-btn\");\n    queueBtn.classList.add(\"active-btn\");\n    for (const element of queueArr) {\n        const filmDetails = await getFilmDetails(element);\n        if (filmDetails) {\n            const filmTile = await makeSingleFilmTile(filmDetails);\n            gallery.innerHTML += filmTile;\n        }\n    }\n  });\n});\n\n"],"names":["$bpxeT","parcelRequire","$098fa886240a5a9a$var$watchedBtn","document","querySelector","$098fa886240a5a9a$var$queueBtn","$098fa886240a5a9a$var$getFilmDetails","filmId","$098fa886240a5a9a$var$_getFilmDetails","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","$dIxxU","default","get","concat","$xTqOg","apiKey","_ctx","sent","data","$ejkSG","Notify","failure","console","error","t0","addEventListener","_callee1","watchArr1","gallery","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_iterator1","_step1","element1","filmDetails1","filmTile1","JSON","parse","localStorage","getItem","innerHTML","classList","add","undefined","Symbol","iterator","next","done","value","_ctx1","makeSingleFilmTile","return","watchArr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","element","filmDetails","filmTile","remove","queueArr"],"version":3,"file":"library.35032951.js.map"}